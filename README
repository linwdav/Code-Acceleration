INSTRUCTIONS
=============================================================================
Compile the program with "make"

Run with "./run".  This will output three files:
	GHZ_output.txt
	profiler_output.txt
	execution_time.txt

Verify calculation by running "diff GHZ_original_output.txt GHZ_output.txt"

Open profiler_output.txt to see how the program spent its time in execution

Open execution_time.txt to see how long the entire program took to run


NOTES
=============================================================================
V0
--
Original unmodified application

V1
--
Add gprof profiler and program execution time
Total runtime: 2m22.690s

V2
--
Reduced the 221005344 calls to running_total(int) to 0
Applied concept of "code motion" to for loops in main.c
Total runtime: 0m45.851s

V3
--
Reduced unnecessary check condition in for loops, e.g. from i<=var to i<var+1
Total runtime: 0m44.007s

Parallelized copy_star2_into_star1 and copy_temp_into_star2 functions with
	OpenMP, but execution was slower
Total runtime: 0m50.476s

Parallelized loops in process_SN, but execution was slower
Total runtime: 0m52.451s

OpenMP overhead not worth it, commented out omp parallel sections

V4
--

